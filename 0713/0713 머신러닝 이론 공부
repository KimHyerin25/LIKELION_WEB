0713 머신러닝 이론 공부

<1. 머신러닝 기초용어>

1. 머신러닝으로 풀 수 있는 문제

1) 편지 봉투에 손으로 쓴 우편번호 숫자 판별하기

2) 의료 영상 이미지에 기반한 종양을 판단하기
이미지를 입력하면 종양 양성 여부 출력

3) 의심되는 신용카드 거래를 감지하기
거래내역 입력하고 부정거래 출력

4) 블로그 글의 주제 구분
많은 양 텍스트 데이터 요약하고 핵심 주제 찾기
...

* 데이터에서 지식을 추출하는 작업
* 통계학, 인공지능, 컴퓨터 과학이 얽혀 있는 연구 분야
* 비정상적인 웹 사이트 접근 탐지 --> 정상/비정상 패턴을 찾는다.

2. 데이터와 문제 이해하기
3. 용어 이해하기 - 샘플, 데이터포인트, 특성

샘플 또는 데이터포인트 : 하나의 개체 또는 행
특성 ; 샘플의 속성, 즉 열
특성 추출 : 좋은 입력 데이터를 만들어내는 것 

4. 왜 파이썬인가?
* 범용 프로그래밍 언어의 장점 : 쉽다.
* 다양한 라이브러리 : 파이썬이 데이터처리 및 적재, 통계, 자연어처리, 시각화, 이미지 처리 등의 필요한 라이브러리를 가지고 있음
* 터미널, 주피터 노트북처럼 대화형 프로그래밍 가능
* 그래픽 사용자 인터페이스나 웹 서비스를 만들 수 있음

5. 라이브러리
Numpy, SciPy, pandas, matplotlib, seaborn, plotly, scikit-learn(머신러닝 라이브러리), tensorflow, keras, pytorch(딥러닝 라이브러리) 
 --머신러닝 라이브러리랑 딥러닝 라이브러리는 무슨 차이에요? : 내가 알아봐
 머신러닝은 특정한 데이터 부류를 내가 지정해 주지만 딥러닝은 무작위의 사진을 입력해주면 컴퓨터가 알아서 분류하고 답을 도출하는 식이다.

* mglearn 라이브러리 ; 이런게 있구나 식으로 알아두면 됨 - 다양한 설명을 해주기 위한 라이브러리

6. 파이썬2 vs 파이썬
2는 현재 지원하지 않음. 3를 사용함. 2020년 9월 기준 파이썬 3.8x 임

7. 머신러닝 기본 용어 이해 - 타깃과 레이블
출력될 수 있는 값인, 레이블의 범주를 클래스(class)라고 한다.
특정 포인트에 대한 출력을 레이블(label)이라고 한다.

8. iris데이터 셋
150개 sample, 5개 특성(feature)
SETOSA, VIRGINICA, VERISICOLOR
(아이리스 데이터 셋은 머신러닝 공부의 기초이므로 알아두는게 상식적이다.)

9. 훈련데이터와 테스트 데이터
* 모델의 평가 : 머신러닝 모델 만든 후, 잘 작동하는지 평가를 해야 함
* 정확한 평가 위한 데이터 나누기 :
훈련 데이터 셋(train set) : 머신러닝 모델 학습할 때 사용함
테스트 셋(test set)/ 홀드아웃 세트/ 테스트 데이터 : 머신러닝 모델 평가할 때 사용

10. 데이터에 대해 가장 먼저 할 일
머신러닝 사용해서 풀 문제인지?
필요한 정보가 누락되지 않았는지? 이상치는 없는지?
데이터 탐색을 통해 알아보기(시각화)
2개의 특성은 - 산점도
3개의 특성은 - 산점도 행렬(데이터가 많을 경운, 오랜 시간이 필요)

<머신 러닝 지도학습 알아보기 >

01 머신러닝
* 지도학습 : 예측하려는 값이 존재
 - 회귀regression
 - 분류classification : 분류는 미리 정의된, 가능성이 있는 여러 클래스 레이블중 하나를 예측한다. (이진 분류(binary classification) : 예/아니오, 양성/음성 클래스, 다중 분류(multiclass classification) : 셋 이상의 클래스로 분류)
* 비지도 학습 : 존재하지 않음

* 모델이 처음보는 데이터에 대해 정확하게 예측할 수 있으면 이를 훈련 세트에서
테스트 세트로 일반화(generalization)되었다고 함.
* 가진 정보를 너무 사용해서 너무 복잡한 모델을 만드는 것을 과대적합(overfitting)이라 한다. 모델이 훈련 세트의 각 샘플에 가깝게 맞춰져서 새로운 데이터에 일반화 되기 어려울 때 발생.

* 반대로 너무 간단한 모델이 선택되는 것을 과소 적합(underfitting)라고 한다.

02 k-최근접 이웃 knn 모델 -07.13.화 수업내용

 - 분류
▶ 가장 가까운 훈련 데이터 포인트를 찾아 이를 예측에 활용한다. (분류의 경우)
▶ 새로운 데이터는 해당 거리안의 데이터가 가장 많이 있는 클래스로 분류하게 된다.(분류)
 - 회귀
▶ 가장 가까운 훈련 데이터 포인트를 찾아 이를 예측에 활용한다. (회귀의 경우)
▶ 새로운 데이터는 해당 거리안의 k개 데이터가 예측하는 목표변수의 값의 평균으로 예측하게
된다.(회귀의 경우)
▶ 이웃 간의 거리를 계산할 때 특성마다 값의 범위가 다를 경우, 범위가 작은 특성에 영향을 받는다.따라서 k-NN 알고리즘을 사용할 때는 특성들이 같은 스케일을 갖도록 정규화하는 것이 일반적이다.

https://github.com/LDJWJ/ML_Basic_Class/blob/main/part03_ml/ch02_01_01_knn_code.pdf

https://roboreport.co.kr/기계학습-훈련-데이터-구성-방법/
* stratify=y : 테스트, 훈련 데이터들의 클래스 비율들을 각각 비슷하게 유지함
(층, 계층화하다, 층을 이루다라는 뜻.. 비율을 만드는데 층층이 비율만드는 뜻으로 사용되는듯)



03 선형모델(linear model)
04 하이퍼 파라미터(hyperparameter)
05 선형회귀(linear regression)
06 릿지 회귀와 랏소 회귀
07 ElasticNet(엘라스틱넷)
08 결정 트리(decision tree)
09 분류용 선형 모델


